import hashlib
import os
import sys
import yara

BANNER = """\033[94m
██╗    ██╗███████╗██╗      ██████╗ ██████╗ ███╗   ██╗███╗   ██╗ ██████╗ 
██║    ██║██╔════╝██║     ██╔════╝██╔═══██╗████╗  ██║████╗  ██║██╔════╝ 
██║ █╗ ██║█████╗  ██║     ██║     ██║   ██║██╔██╗ ██║██╔██╗ ██║██║  ███╗
██║███╗██║██╔══╝  ██║     ██║     ██║   ██║██║╚██╗██║██║╚██╗██║██║   ██║
╚███╔███╔╝███████╗███████╗╚██████╗╚██████╔╝██║ ╚████║██║ ╚████║╚██████╔╝
 ╚══╝╚══╝ ╚══════╝╚══════╝ ╚═════╝ ╚═════╝ ╚═╝  ╚═══╝╚═╝  ╚═══╝ ╚═════╝                                                                      
\033[0m"""

def calcular_md5(arquivo):
    try:
        with open(arquivo, "rb") as f:
            data = f.read()
            md5_hash = hashlib.md5(data).hexdigest()
            return md5_hash
    except Exception as e:
        print(f"[!] Ocorreu um erro ao calcular o MD5: {str(e)}")
        return None

def verificar_yara_regras(arquivo):
    try:
        rules = yara.compile("malware_rules.yar")
        matches = rules.match(filepath=arquivo)

        if matches:
            print(f"[*] O arquivo {arquivo} contém correspondências com as regras de malware:")
            for match in matches:
                print(f"  - Regra: {match.rule}")
        else:
            print(f"[*] O arquivo {arquivo} não corresponde a nenhuma regra de malware conhecida.")
    except Exception as e:
        print(f"[!] Ocorreu um erro ao verificar as regras de malware: {str(e)}")

def analisar_arquivo_malicioso(arquivo):
    md5_hash = calcular_md5(arquivo)
    if md5_hash:
        print(f"[*] MD5 Hash do arquivo: {md5_hash}")
        verificar_yara_regras(arquivo)
    else:
        print("[!] Não foi possível calcular o MD5 do arquivo.")

def verificar_site_ou_ip_ou_arquivo():
    escolha = input("Escolha o que deseja verificar (site/ip/arquivo): ").lower()
    if escolha == "site":
        site = input("Digite o site alvo: ")
        # Adicione a lógica de verificação de site aqui
    elif escolha == "ip":
        ip = input("Digite o endereço IP: ")
        # Adicione a lógica de verificação de IP aqui
    elif escolha == "arquivo":
        arquivo = input("Digite o caminho do arquivo para análise: ")
        if os.path.exists(arquivo):
            analisar_arquivo_malicioso(arquivo)
        else:
            print("[!] O arquivo não existe.")
            sys.exit(1)
    else:
        print("[!] Opção inválida. Escolha entre 'site', 'ip' ou 'arquivo'.")
        sys.exit(1)

def main():
    print(BANNER)
    verificar_site_ou_ip_ou_arquivo()

if __name__ == "__main__":
    main()
    